{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","style","marginTop","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"oOAIMA,E,qLACU,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAC1B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,MAAOC,MAAO,CAAEC,UAAW,KACzD,yBAAKJ,UAAU,yBACb,4BACEA,UAAU,oBACVK,QAAS,kBAAM,EAAKT,MAAMU,WAAWP,KAFvC,WAOF,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAMrC,OACE,6BACE,yBAAKF,UAAU,mBAAmBL,KAAKY,mB,GArBxBC,aAmCRC,eALS,SAAAC,GACtB,MAAO,CAAEb,MAAOa,EAAMb,SAMtB,CAAES,WCxCsB,SAAAP,GAExB,MAAO,CACLY,KAAM,gBACNC,QAASb,KDkCEU,CAGbf,GEjBae,eANS,SAAAC,GACtB,MAAO,CACLX,KAAMW,EAAMG,gBAIDJ,EAtBI,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACpB,OAAKA,EAIH,6BACE,wBAAII,MAAO,CAACC,UAAW,KAAvB,gBACA,qCACUL,EAAKG,MACb,6BAFF,aAGaH,EAAKe,WARb,iDCcIC,EAfH,WACV,OACE,yBAAKf,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACf,kBAAC,EAAD,UCMOgB,cAAgB,CAC7BnB,MAjBmB,WACnB,MAAO,CACL,CAAEK,MAAO,UAAWY,SAAU,QAC9B,CAAEZ,MAAO,iBAAkBY,SAAU,QACrC,CAAEZ,MAAO,cAAeY,SAAU,QAClC,CAAEZ,MAAO,qBAAsBY,SAAU,UAa3CD,aAT0B,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCAC3D,MAAoB,kBAAhBA,EAAON,KACFM,EAAOL,QAETC,KCRTK,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.eff022f5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSong } from \"../actions\";\n\nclass SongList extends Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return (\n        <div className=\"item\" key={song.title} style={{ marginTop: 10 }}>\n          <div className=\"right floated content\">\n            <button\n              className=\"ui button primary\"\n              onClick={() => this.props.selectSong(song)}\n            >\n              Select\n            </button>\n          </div>\n          <div className=\"content\">{song.title}</div>\n        </div>\n      );\n    });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"ui divided list\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\n\n//Take the state from the redux store and\n//run some calculations on it that will cause that data to show up\n//as props inside the component (getMyState)\nconst mapStateToProps = state => {\n  return { songs: state.songs };\n};\n\n//connect() is being invoked with SongList as a parameter\nexport default connect(\n  mapStateToProps,\n  { selectSong }\n)(SongList);\n","//Action creator\nexport const selectSong = song => {\n  //Return an action\n  return {\n    type: \"SONG_SELECTED\",\n    payload: song,\n  };\n};\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst SongDetail = ({ song }) => {\n  if (!song) {\n    return <div>Select a song</div>;\n  }\n  return (\n    <div>\n      <h3 style={{marginTop: 10}}>Details for:</h3>\n      <p>\n        Title: {song.title}\n        <br />\n        Duration: {song.duration}\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    song: state.selectedSong,\n  };\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from \"react\";\nimport SongList from \"./SongList\";\nimport SongDetail from './SongDetail';\n\nconst App = () => {\n  return (\n    <div className=\"ui container grid\">\n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"column eight wide\">\n        <SongDetail />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst songsReducer = () => {\n  return [\n    { title: \"21 Guns\", duration: \"5:21\" },\n    { title: \"American Idiot\", duration: \"2:54\" },\n    { title: \"Basket Case\", duration: \"3:01\" },\n    { title: \"Brain Stew / Jaded\", duration: \"4:43\" },\n  ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if (action.type === \"SONG_SELECTED\") {\n    return action.payload;\n  }\n  return selectedSong;\n};\n\nexport default combineReducers({ //store\n  songs : songsReducer,\n  selectedSong: selectedSongReducer\n});\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}